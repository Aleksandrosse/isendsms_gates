<?xml version="1.0" encoding="UTF-8"?>
<gate>
	<name>MTS</name>
	<caption>МТС</caption>
	<type>SMS</type>
	<class>HTTP</class>
	<version>111</version>
	<priority>10</priority>
	<country>Россия</country>
	<prefixlist>
		<prefix start="+7 90259"/>
		<prefix start="+7 910000" end="+7 911069"/>
		<prefix start="+7 911070" end="+7 911074" tag="2"/>
		<prefix start="+7 911075" end="+7 911449"/>
		<prefix start="+7 91145" end="+7 91149" tag="2"/>
		<prefix start="+7 91150" end="+7 91184"/>
		<prefix start="+7 91185" end="+7 91186" tag="2"/>
		<prefix start="+7 911870" end="+7 912065"/>
		<prefix start="+7 912068" end="+7 914014"/>
		<prefix start="+7 91402" end="+7 91404"/>
		<prefix start="+7 91405" tag="1"/>
		<prefix start="+7 91406" end="+7 91429"/>
		<prefix start="+7 91431" end="+7 91433"/>
		<prefix start="+7 91438" end="+7 91452"/>
		<prefix start="+7 914538"/>
		<prefix start="+7 91454" end="+7 91462"/>
		<prefix start="+7 91463" tag="1"/>
		<prefix start="+7 91464" end="+7 91481"/>
		<prefix start="+7 91483" tag="1"/>
		<prefix start="+7 91484" end="+7 91497"/>
		<prefix start="+7 91498" tag="1"/>
		<prefix start="+7 915000" end="+7 919136"/>
		<prefix start="+7 919139" end="+7 919411"/>
		<prefix start="+7 91942" end="+7 91977"/>
		<prefix start="+7 919780"/>
		<prefix start="+7 919784"/>
		<prefix start="+7 919786"/>
		<prefix start="+7 919790" end="+7 919970"/>
		<prefix start="+7 91998" end="+7 91999"/>
		<prefix start="+7 953119"/>
		<prefix start="+7 980240" end="+7 980253"/>
		<prefix start="+7 98026"/>
		<prefix start="+7 98029" end="+7 98038"/>
		<prefix start="+7 980500" end="+7 980504"/>
		<prefix start="+7 980510" end="+7 980514"/>
		<prefix start="+7 98052" end="+7 98054"/>
		<prefix start="+7 98056"/>
		<prefix start="+7 98060" end="+7 98063"/>
		<prefix start="+7 98063"/>
		<prefix start="+7 980640" end="+7 980644"/>
		<prefix start="+7 980650" end="+7 980664"/>
		<prefix start="+7 98067" end="+7 98079"/>
		<prefix start="+7 9811"/>
		<prefix start="+7 98130" end="+7 98131"/>
		<prefix start="+7 981340" end="+7 981364"/>
		<prefix start="+7 98140" end="+7 98144"/>
		<prefix start="+7 98145" end="+7 98146" tag="2"/>
		<prefix start="+7 98147" end="+7 98148"/>
		<prefix start="+7 98150"/>
		<prefix start="+7 981510" end="+7 981524"/>
		<prefix start="+7 98155" end="+7 98156"/>
		<prefix start="+7 98160" end="+7 98161"/>
		<prefix start="+7 981650" end="+7 981654"/>
		<prefix start="+7 98168" end="+7 98169"/>
		<prefix start="+7 9817"/>
		<prefix start="+7 98180" end="+7 98184"/>
		<prefix start="+7 981850" end="+7 981864"/>
		<prefix start="+7 98187" end="+7 98194"/>
		<prefix start="+7 98230" end="+7 98234"/>
		<prefix start="+7 98238"/>
		<prefix start="+7 982390" end="+7 982394"/>
		<prefix start="+7 98240" end="+7 98241"/>
		<prefix start="+7 98246" end="+7 98257"/>
		<prefix start="+7 98260" end="+7 98267"/>
		<prefix start="+7 98290" end="+7 98293"/>
		<prefix start="+7 98295"/>
		<prefix start="+7 98310" end="+7 98341"/>
		<prefix start="+7 98342" end="+7 98344" tag="1"/>
		<prefix start="+7 98345"/>
		<prefix start="+7 983500" end="+7 983598"/>
		<prefix start="+7 98360" end="+7 98362"/>
		<prefix start="+7 98410" end="+7 98411"/>
		<prefix start="+7 985"/>
		<prefix start="+7 987205" end="+7 987399"/>
		<prefix start="+7 98740" end="+7 98746" />
		<prefix start="+7 98750" end="+7 98771"/>
		<prefix start="+7 987720" end="+7 987732" />
		<prefix start="+7 987735" end="+7 987739" />
		<prefix start="+7 98774" end="+7 98799"/>
		<prefix start="+7 98806" end="+7 98807"/>
		<prefix start="+7 988080" end="+7 988084"/>
		<prefix start="+7 98809" end="+7 98811"/>
		<prefix start="+7 98814" end="+7 98818"/>
		<prefix start="+7 988200" end="+7 988473"/>
		<prefix start="+7 988474" end="+7 988483"/>
		<prefix start="+7 988486"/>
		<prefix start="+7 98849" end="+7 98851"/>
		<prefix start="+7 988523"/>
		<prefix start="+7 98853" end="+7 98854"/>
		<prefix start="+7 988557" end="+7 988600"/>
		<prefix start="+7 988602"/>
		<prefix start="+7 988605" end="+7 988619"/>
		<prefix start="+7 988622"/>
		<prefix start="+7 988624" end="+7 988628"/>
		<prefix start="+7 988630" end="+7 988655"/>
		<prefix start="+7 988665" end="+7 988666"/>
		<prefix start="+7 988674" end="+7 988679"/>
		<prefix start="+7 98868" end="+7 98875"/>
		<prefix start="+7 988762"/>
		<prefix start="+7 988765"/>
		<prefix start="+7 988766" end="+7 988799"/>
		<prefix start="+7 98880" end="+7 98899"/>
		<prefix start="+7 98950" end="+7 98955"/>
		<prefix start="+7 989600" end="+7 989686"/>
		<prefix start="+7 989690" end="+7 989694"/>
		<prefix start="+7 9897" end="+7 9899"/>
		
		<prefix start="+7 495 101" end="+7 495 108"/>
		<prefix start="+7 495 139"/>
		<prefix start="+7 495 231"/>
		<prefix start="+7 495 233"/>
		<prefix start="+7 495 25802" end="+7 495 25803"/>
		<prefix start="+7 495 364"/>
		<prefix start="+7 495 410" end="+7 495 411"/>
		<prefix start="+7 495 76"/>
		<prefix start="+7 495 773" end="+7 495 776"/>
		<prefix start="+7 495 784" end="+7 495 786"/>
		<prefix start="+7 495 913 0" end="+7 495 913 1"/>
		<prefix start="+7 495 920" end="+7 495 922"/>
		<prefix start="+7 495 960 0" end="+7 495 960 0"/>
		<prefix start="+7 495 960 4" end="+7 495 960 4"/>
		<prefix start="+7 495 967 2" end="+7 495 967 2"/>
		<prefix start="+7 495 967 4" end="+7 495 967 5"/>
		<prefix start="+7 495 969 65" end="+7 495 969 99"/>
		<prefix start="+7 495 970"/>
		<prefix start="+7 495 991"/>
		<prefix start="+7 495 997" end="+7 495 999"/>

		<prefix start="+7 812 92"/>
	</prefixlist>
	<info>
		<maxsymbols>140</maxsymbols>
		<maxunicodesymbols>50</maxunicodesymbols>
		<supportflash>1</supportflash>
		<supportdtdelivery>1</supportdtdelivery>
		<supportunicode>1</supportunicode>
		<supportcheckdelivery>1</supportcheckdelivery>
		<captcha>1</captcha>
		<gateurl>http://sendsms.ssl.mts.ru/</gateurl>
		<supportautorecognize>0</supportautorecognize>
		<required_yourphone>1</required_yourphone>
	</info>
	<classprops>
		<encoding>UTF-8</encoding>
		<handleredirects>0</handleredirects>
		<sendinit>eval(begin HTTP.Protocol:='1.0'; end;)</sendinit>
		<pageurl>http://sendsms.ssl.mts.ru/</pageurl>
		<captchacount>2</captchacount>
		<customimage>1</customimage>
		<clickimage>eval(
			begin
				Result:=(SMS['CaptchaIteration']=1);
			end;
			)</clickimage>
		<clickimagewidth>50</clickimagewidth>
		<clickimageheight>50</clickimageheight>
		<proccessimage>eval(
					var
						DT: TDateTime;
						PhoneDef: string;
						i, cnt, p: integer;
						Code, FinalCode, MTSCode, Items, PStr: string;
						JS: TJSEval;
			begin
				Stored['ErrorText']:='';
				HTTP.CustomMime:='application/json; charset=utf-8';
				if SMS['CaptchaIteration']=1 then
				begin
					Stored['ViewState']:=Html.RegExp('id=&quot;__VIEWSTATE&quot; value=&quot;(.*?)&quot;',1);
					Stored['InputPrefix']:=Html.StrBetweenRev('name=&quot;','$tbPhoneNumber'); //ctl00$ctl00$ctl00$ctl03$ctl00$ctl07$ctl01$ctl02$ctl00
					Stored['InputPrefix2']:=Html.StrBetweenRev('name=&quot;','_scriptManagerId_TSM'); //ctl00_ctl00_ctl00_ctl03_ctl00_ctl07
					Stored['InputPrefix3']:=Html.RegExp('PageRequestManager\._initialize\(''(.*?)\$scriptManagerId''',1); //ctl00$ctl00$ctl00$ctl03$ctl00$ctl07
					Stored['InputTSMValue']:=DecodeFormElem(Html.RegExp('_TSM_CombinedScripts_=(.*?)&quot;',1)); //Value _scriptManagerId_TSM

					HTTP.HTTPMethod('POST','http://sendsms.ssl.mts.ru/Captcha/CaptchaInfo.svc/json/GetCaptchaInfo');
					JS:=TJSEval.Create;

					MTSCode:=Html.RegExp('VCode&quot;:&quot;(.*)&quot;}$',1);
					MTSCode:=ReplaceStr(MTSCode, '\&quot;','&quot;');

					//Добавялем свой код, эмулируем jQuery
					Code:='' + 	
'var inputs = [];' + sLineBreak +
'function form() {' + sLineBreak +
'	return {' + sLineBreak +
'		append: function(obj){' + sLineBreak +
'		}' + sLineBreak +
'	}	' + sLineBreak +
'};' + sLineBreak +
'function input(){' + sLineBreak +
'	var new_input = {' + sLineBreak +
'		classes: [],' + sLineBreak +
'		attrs: [],' + sLineBreak +
'		name: &quot;&quot;,' + sLineBreak +
'		val: &quot;&quot;,' + sLineBreak +
'		attr: function(name, value) {' + sLineBreak +
'			if (name!=&quot;name&quot;)' + sLineBreak +
'				this.attrs[name] = value;' + sLineBreak +
'			else' + sLineBreak +
'				this.name = value; 	' + sLineBreak +
'			return this;' + sLineBreak +
'		},' + sLineBreak +
'		addClass: function(classname) {' + sLineBreak +
'			this.classes.push(classname);' + sLineBreak +
'			return this; ' + sLineBreak +
'		},' + sLineBreak +
'		val: function(value) {' + sLineBreak +
'			this.val = value;' + sLineBreak +
'			return this;			' + sLineBreak +
'		},' + sLineBreak +
'		remove: function() {' + sLineBreak +
'			for(var i=0;i&lt;inputs.length;i++) {' + sLineBreak +
'				if (inputs[i]==this) {' + sLineBreak +
'					inputs.splice(i,1);' + sLineBreak +
'					break;' + sLineBreak +
'				}' + sLineBreak +
'			}' + sLineBreak +
'		}' + sLineBreak +
'	};' + sLineBreak +
'	inputs.push(new_input);' + sLineBreak +
'	return new_input;' + sLineBreak +
'		' + sLineBreak +
'	' + sLineBreak +
'}' + sLineBreak +
'' + sLineBreak +
'function search_byselector(selector) {' + sLineBreak +
'	var className=&quot;&quot;;' + sLineBreak +
'	var AttrName=&quot;&quot;;' + sLineBreak +
'	var AttrValue=&quot;&quot;;' + sLineBreak +
'	//Извлекаем класс' + sLineBreak +
'	var p = selector.indexOf(&quot;.&quot;);' + sLineBreak +
'	if (p&gt;=0) {' + sLineBreak +
'		className = selector.substring(p+1);' + sLineBreak +
'	}' + sLineBreak +
'	//Извлекаем аттрибут' + sLineBreak +
'	var reg = new RegExp(&quot;\\[([\\w\\d_]+)=\&quot;([\\w\\d_]+)\&quot;\\]&quot;,&quot;g&quot;);' + sLineBreak +
'	var matches = reg.exec(selector);' + sLineBreak +
'	while (matches!=null) {' + sLineBreak +
'		if (matches[1]!=&quot;type&quot;) {' + sLineBreak +
'			AttrName=matches[1];' + sLineBreak +
'			AttrValue=matches[2];' + sLineBreak +
'		}	' + sLineBreak +
'		matches = reg.exec(selector);' + sLineBreak +
'	}' + sLineBreak +
'	var result = null;' + sLineBreak +
'	//Ищем по классу или аттрибуту' + sLineBreak +
'	for (var i=0;i&lt;inputs.length;i++) {' + sLineBreak +
'		if (className!=&quot;&quot;) {' + sLineBreak +
'			for (var j=0;j&lt;inputs[i].classes.length;j++) {' + sLineBreak +
'				if (className==inputs[i].classes[j]) {' + sLineBreak +
'					result = inputs[i];' + sLineBreak +
'					break;' + sLineBreak +
'				}' + sLineBreak +
'			}' + sLineBreak +
'		}' + sLineBreak +
'		if ((AttrName!=&quot;&quot;) &amp;&amp; (AttrValue!=&quot;&quot;)) {' + sLineBreak +
'			if (inputs[i].attrs[AttrName]==AttrValue) {' + sLineBreak +
'				result = inputs[i];' + sLineBreak +
'			}' + sLineBreak +
'		}' + sLineBreak +
'	}' + sLineBreak +
'	if (result!=null)' + sLineBreak +
'		return result;' + sLineBreak +
'	else' + sLineBreak +
'		return new input();	' + sLineBreak +
'}' + sLineBreak +
'' + sLineBreak +
'function jQuery(selector, scope) {' + sLineBreak +
'	switch (selector.toLowerCase()) {' + sLineBreak +
'		case &quot;form&quot;:' + sLineBreak +
'			return new form();' + sLineBreak +
'			break;' + sLineBreak +
'		case &quot;&lt;input\/&gt;&quot;:' + sLineBreak +
'			return new input();' + sLineBreak +
'			break;' + sLineBreak +
'		default:' + sLineBreak +
'			return search_byselector(selector);' + sLineBreak +
'			break;		' + sLineBreak +
'	}' + sLineBreak +
'}'+ sLineBreak;
				Code:=Code+MTSCode;
				Code:=Code+sLineBreak + 
'var r = &quot;&quot;;' + sLineBreak +
'for (var i=0;i&lt;inputs.length;i++) {' + sLineBreak +
'	r = r + &quot;&amp;amp;&quot; + inputs[i].name + &quot;=&quot; + inputs[i].val;' + sLineBreak +
'}' + sLineBreak + 
JS.ResultName+'.SetValue(&quot;hidden&quot;,r);' + sLineBreak;

					JS.Exec(Code);
					Stored['HiddenInputs']:=JS.GetResultValue('hidden');
					//Получаем изображения
					Items:=Html.StrBetween('Items&quot;:[',']');
					p:=Pos(',',Items);
					cnt:=0;
					while (p&gt;0) or (Items&lt;&gt;'') do
					begin
						cnt:=cnt+1;
						if p&gt;0 then
						begin
							PStr:=Copy(Items,1,p-1);
							Delete(Items,1,p);
						end else
						begin
							PStr:=Items;
							Items:='';
						end;	
						Stored['CaptchaImg'+VarToStr(cnt)]:=StrBetween(PStr,'Id&quot;:&quot;','&quot;');
						p:=Pos(',',Items);
					end;

					Stored['ImageDesc']:=CleanMessageText(Html.StrBetween('QuestionText&quot;:&quot;','&quot;'));
					
					Img.SetSize(cnt*50,50);
					
					for i:=1 to cnt do
					begin
						HTTP.HTTPMethod('GET','http://sendsms.ssl.mts.ru/Captcha/image.ashx?CaptchaItemId='+Stored['CaptchaImg'+VarToStr(i)]);
						Img.AssignSourceImage($FFFFFF);
						Img.CopyRect((i-1)*50,0,Bounds(0,0,50,50));
					end;				
				end; //CaptchaIteration=1
				if SMS['CaptchaIteration']=2 then
				begin
					DT:=SMS['DeliveryTime'];
					if SMS['Delivery'] then
					begin	
						if (DT-Now)&lt;5*OneMinute then
						begin
							DT:=DT+5*OneMinute;
						end;	
					end;
					DT:=AdjustTimeZone(DT,240,false);
					if SMS['Phone_Def']='495' then
						PhoneDef:='985'
					else PhoneDef:=SMS['Phone_Def'];
					
					Code:=SMS['Code'];
					for i:=1 to Length(Code) do
					begin
						if Length(FinalCode)&gt;0 then
							FinalCode:=FinalCode+',';
						FinalCode:=FinalCode+Stored['CaptchaImg'+Code[i]];
					end;
					
					PostData.Add(Stored['InputPrefix3'] + '$scriptManagerId',Stored['InputPrefix'] + '$updatePanel|' + Stored['InputPrefix'] + '$btnSend');
					PostData.Add(Stored['InputPrefix2'] + '_scriptManagerId_TSM',Stored['InputTSMValue']);
					PostData.Add('__EVENTTARGET','');
					PostData.Add('__EVENTARGUMENT','');
					PostData.Add('__VIEWSTATE',Stored['ViewState']);
					PostData.Add('Region_Id','1826');
					PostData.Add('SiteSection_Id','1744');
					PostData.Add('ShowPersCabLink','False');
					PostData.Add('TopMenuParentId','801624');
					PostData.Add(Stored['InputPrefix'] + '$tbYourPhoneNumber', Copy(SMS['YourPhone'],2,10));
					PostData.Add(Stored['InputPrefix'] + '$tbPhoneNumber', SMS['Phone_Def']+SMS['Phone_Number']);
					PostData.Add(Stored['InputPrefix'] + '$tbMessage',SMS['Text']);
					PostData.Add(Stored['InputPrefix'] + '$tbSymbolsCounter',Length(SMS['Text']));
					PostData.Add(Stored['InputPrefix'] + '$tbSymbolsMaxCount',SMS['MaxSymbols']);
					if SMS['Flash'] then
						PostData.Add(Stored['InputPrefix'] + '$cbxExpressSMS','on');
					if SMS['Delivery'] then
						PostData.Add(Stored['InputPrefix'] + '$cbxForCalendar','on');
					PostData.Add(Stored['InputPrefix'] + '$ctl02',FormatDateTime('d',DT));
					PostData.Add(Stored['InputPrefix'] + '$ctl03',FormatDateTime('m',DT));
					PostData.Add(Stored['InputPrefix'] + '$ctl04',FormatDateTime('yyyy',DT));
					PostData.Add(Stored['InputPrefix'] + '$ctl05',FormatDateTime('hh',DT));
					PostData.Add(Stored['InputPrefix'] + '$ctl07',FormatDateTime('nn',DT));
					PostData.Add(Stored['InputPrefix'] + '$ctrlCaptcha$ClientState',FinalCode);
					PostData.AddRawData(Stored['HiddenInputs']);
					PostData.Add('__ASYNCPOST','true');
					PostData.Add(Stored['InputPrefix'] + '$btnSend.x','73');
					PostData.Add(Stored['InputPrefix'] + '$btnSend.y','8');
		
					HTTP.CustomMime:='application/x-www-form-urlencoded; charset=utf-8';
					HTTP.Referer:='http://sendsms.ssl.mts.ru/';
					HTTP.HTTPMethod('POST','http://sendsms.ssl.mts.ru/');
					
					if Html.ExistsStr('Вы неправильно ответили на вопрос') then
						Stored['ErrorText']:='Вы неправильно ответили на вопрос! Попробуйте ответить на новый вопрос';
						
					
					Stored['ViewState']:=Html.RegExp('hiddenField\|__VIEWSTATE\|(.*?)\|',1);
					Img.SetSize(250,60);
					Img.TextOut(0,0,'На номер +' + SMS['YourPhone']);
					Img.TextOut(0,20,'выслан код подтверждения.');
					Img.TextOut(0,40,'Пожалуйста, введите его.');
					
					Stored['ImageDesc']:='Введите код, отправленный Вам на телефон';

				end;

			end;
		)
		</proccessimage>
		<gateerror>eval(Stored['ErrorText'])</gateerror>
		<imagedescription>eval(Stored['ImageDesc'])</imagedescription>
		<posturl>http://sendsms.ssl.mts.ru/</posturl>
		<custommime>application/x-www-form-urlencoded; charset=utf-8</custommime>
		<postdata>eval(
					var
						i, p: integer;
						Code, MTSCode, Items, PStr: string;
						JS: TJSEval;
					begin

				HTTP.CustomMime:='application/json; charset=utf-8';
				HTTP.HTTPMethod('POST','http://sendsms.ssl.mts.ru/Captcha/CaptchaInfo.svc/json/GetCaptchaInfo');
				JS:=TJSEval.Create;

				MTSCode:=Html.RegExp('VCode&quot;:&quot;(.*)&quot;}$',1);
				MTSCode:=ReplaceStr(MTSCode, '\&quot;','&quot;');

				//Добавялем свой код, эмулируем jQuery
				Code:='' + 	
'var inputs = [];' + sLineBreak +
'function form() {' + sLineBreak +
'	return {' + sLineBreak +
'		append: function(obj){' + sLineBreak +
'		}' + sLineBreak +
'	}	' + sLineBreak +
'};' + sLineBreak +
'function input(){' + sLineBreak +
'	var new_input = {' + sLineBreak +
'		classes: [],' + sLineBreak +
'		attrs: [],' + sLineBreak +
'		name: &quot;&quot;,' + sLineBreak +
'		val: &quot;&quot;,' + sLineBreak +
'		attr: function(name, value) {' + sLineBreak +
'			if (name!=&quot;name&quot;)' + sLineBreak +
'				this.attrs[name] = value;' + sLineBreak +
'			else' + sLineBreak +
'				this.name = value; 	' + sLineBreak +
'			return this;' + sLineBreak +
'		},' + sLineBreak +
'		addClass: function(classname) {' + sLineBreak +
'			this.classes.push(classname);' + sLineBreak +
'			return this; ' + sLineBreak +
'		},' + sLineBreak +
'		val: function(value) {' + sLineBreak +
'			this.val = value;' + sLineBreak +
'			return this;			' + sLineBreak +
'		},' + sLineBreak +
'		remove: function() {' + sLineBreak +
'			for(var i=0;i&lt;inputs.length;i++) {' + sLineBreak +
'				if (inputs[i]==this) {' + sLineBreak +
'					inputs.splice(i,1);' + sLineBreak +
'					break;' + sLineBreak +
'				}' + sLineBreak +
'			}' + sLineBreak +
'		}' + sLineBreak +
'	};' + sLineBreak +
'	inputs.push(new_input);' + sLineBreak +
'	return new_input;' + sLineBreak +
'		' + sLineBreak +
'	' + sLineBreak +
'}' + sLineBreak +
'' + sLineBreak +
'function search_byselector(selector) {' + sLineBreak +
'	var className=&quot;&quot;;' + sLineBreak +
'	var AttrName=&quot;&quot;;' + sLineBreak +
'	var AttrValue=&quot;&quot;;' + sLineBreak +
'	//Извлекаем класс' + sLineBreak +
'	var p = selector.indexOf(&quot;.&quot;);' + sLineBreak +
'	if (p&gt;=0) {' + sLineBreak +
'		className = selector.substring(p+1);' + sLineBreak +
'	}' + sLineBreak +
'	//Извлекаем аттрибут' + sLineBreak +
'	var reg = new RegExp(&quot;\\[([\\w\\d_]+)=\&quot;([\\w\\d_]+)\&quot;\\]&quot;,&quot;g&quot;);' + sLineBreak +
'	var matches = reg.exec(selector);' + sLineBreak +
'	while (matches!=null) {' + sLineBreak +
'		if (matches[1]!=&quot;type&quot;) {' + sLineBreak +
'			AttrName=matches[1];' + sLineBreak +
'			AttrValue=matches[2];' + sLineBreak +
'		}	' + sLineBreak +
'		matches = reg.exec(selector);' + sLineBreak +
'	}' + sLineBreak +
'	var result = null;' + sLineBreak +
'	//Ищем по классу или аттрибуту' + sLineBreak +
'	for (var i=0;i&lt;inputs.length;i++) {' + sLineBreak +
'		if (className!=&quot;&quot;) {' + sLineBreak +
'			for (var j=0;j&lt;inputs[i].classes.length;j++) {' + sLineBreak +
'				if (className==inputs[i].classes[j]) {' + sLineBreak +
'					result = inputs[i];' + sLineBreak +
'					break;' + sLineBreak +
'				}' + sLineBreak +
'			}' + sLineBreak +
'		}' + sLineBreak +
'		if ((AttrName!=&quot;&quot;) &amp;&amp; (AttrValue!=&quot;&quot;)) {' + sLineBreak +
'			if (inputs[i].attrs[AttrName]==AttrValue) {' + sLineBreak +
'				result = inputs[i];' + sLineBreak +
'			}' + sLineBreak +
'		}' + sLineBreak +
'	}' + sLineBreak +
'	if (result!=null)' + sLineBreak +
'		return result;' + sLineBreak +
'	else' + sLineBreak +
'		return new input();	' + sLineBreak +
'}' + sLineBreak +
'' + sLineBreak +
'function jQuery(selector, scope) {' + sLineBreak +
'	switch (selector.toLowerCase()) {' + sLineBreak +
'		case &quot;form&quot;:' + sLineBreak +
'			return new form();' + sLineBreak +
'			break;' + sLineBreak +
'		case &quot;&lt;input\/&gt;&quot;:' + sLineBreak +
'			return new input();' + sLineBreak +
'			break;' + sLineBreak +
'		default:' + sLineBreak +
'			return search_byselector(selector);' + sLineBreak +
'			break;		' + sLineBreak +
'	}' + sLineBreak +
'}'+ sLineBreak;
				Code:=Code+MTSCode;
				Code:=Code+sLineBreak + 
'var r = &quot;&quot;;' + sLineBreak +
'for (var i=0;i&lt;inputs.length;i++) {' + sLineBreak +
'	r = r + &quot;&amp;amp;&quot; + inputs[i].name + &quot;=&quot; + inputs[i].val;' + sLineBreak +
'}' + sLineBreak + 
JS.ResultName+'.SetValue(&quot;hidden&quot;,r);' + sLineBreak;

				JS.Exec(Code);
				Stored['HiddenInputs']:=Stored['HiddenInputs'] + JS.GetResultValue('hidden');

				PostData.Add(Stored['InputPrefix3'] + '$scriptManagerId',Stored['InputPrefix'] + '$updatePanel|' + Stored['InputPrefix'] + '$btnRealSend');
				PostData.Add(Stored['InputPrefix2'] + '_scriptManagerId_TSM',Stored['InputTSMValue']);
				PostData.Add(Stored['InputPrefix'] + '$tbCheckConfirmCode', SMS['Code']);
				PostData.Add(Stored['InputPrefix'] + '$ctrlCaptcha$ClientState','');
				PostData.Add('__EVENTTARGET','');
				PostData.Add('__EVENTARGUMENT','');
				PostData.Add('__VIEWSTATE',Stored['ViewState']);
				PostData.AddRawData(Stored['HiddenInputs']);
				PostData.Add('__ASYNCPOST','true');
				PostData.Add(Stored['InputPrefix'] + '$btnRealSend.x','73');
				PostData.Add(Stored['InputPrefix'] + '$btnRealSend.y','8');
				end;	
		)
		</postdata>
		<success>eval(HTML.RegExp('Ваше сообщение отправлено',0))</success>
		<error>eval(begin
						Result:=Html.RegExp('SmsSendingControl_valCustomCaptcha&quot;&gt;(.*?)&lt;/span&gt;',1);
						if Result='' then
							Result:=HTML.RegExp('class=&quot;ERROR&quot;&gt;(.*?)&lt;/span&gt;',1);
						if (Result='') and (Html.ExistsStr('ctl00_ctl00_ctl00_SMSSendControl_pnlForm')) then
							Result:='Превышение лимита отправки, попробуйте позже';
					end;		
							
					)
		</error>
		<cd_method>POST</cd_method>
		<cd_posturl>http://sendsms.ssl.mts.ru/Handlers/CheckSMSStatusHandler.ashx</cd_posturl>
		<cd_postdata>eval(
						begin
							if Stored['MsgId']='' then
								Stored['MsgId']:=Html.RegExp('id=&quot;hfMessageID&quot; value=&quot;(.*?)&quot;',1);
							PostData.Add('MessageId',Stored['MsgID']);
						end;
						)
		</cd_postdata>				
		<cd_success>eval(
							begin
								if HTML.ExistsStr('сообщение находится в очереди на доставку') or
									HTML.ExistsStr('ожидаем') then
									Result:='WAIT'
								else Result:=HTML.ExistsStr(' сообщение отправлено') or HTML.ExistsStr('сообщение доставлено');	
							end;
						)
		</cd_success>
		<cd_error>eval(
						begin
							Result:=HTML.RegExp('&quot;message&quot;:&quot;Текущий статус: (.*?)&quot;',1);
							if Result='' then
								Result:=HTML.RegExp('Текущий статус: (.*?)&lt;/span&gt;',1);
							if Result='' then
								Result:='Ошибка подтверждения доставки';
						end;
						)
		</cd_error>
	</classprops>
</gate>
