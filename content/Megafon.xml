<?xml version="1.0" encoding="UTF-8"?>
<gate>
	<name>Megafon</name>
	<caption>Мегафон</caption>
	<type>SMS</type>
	<class>HTTP</class>
	<version>23</version>
	<priority>10</priority>
	<country>Россия</country>
	<prefixlist>
		<prefix start="+7 920" end="+7 933"/>
		<prefix start="+7 937" end="+7 938"/>
		<prefix start="+7 939 70" end="+7 939 75"/>

		<prefix start="+7 812 90" end="+7 812 91" tag="1"/>
		<prefix start="+7 812 93" end="+7 812 96" tag="1"/>
		<prefix start="+7 812 99" tag="1"/>

		<prefix start="7 495 500" end="7 495 507" tag="0"/>
		<prefix start="7 495 51" tag="0"/>
		<prefix start="7 495 542" end="+7 495 543" tag="0"/>
		<prefix start="7 495 771" end="7 495 772" tag="0"/>
		
	</prefixlist>
	<info>
		<maxsymbols>150</maxsymbols>
		<maxunicodesymbols>150</maxunicodesymbols>
		<supportflash>0</supportflash>
		<supportdtdelivery>1</supportdtdelivery>
		<supportunicode>1</supportunicode>
		<captcha>1</captcha>
		<supportcheckdelivery>1</supportcheckdelivery>
		<gateurl>http://moscow.megafon.ru/help/info/message/</gateurl>
	</info>
	<classprops>
		<encoding>UTF-8</encoding>
		<pageurl>http://moscow.megafon.ru/help/info/message/</pageurl>
		<imageurl>eval(
			begin
				HTTP.Referer:='http://moscow.megafon.ru/help/info/message/';
				HTTP.HTTPMethod('GET', 'http://moscow.megafon.ru/api/sms/captcha');
				HTTP.HTTPMethod('GET','https://www.google.com/recaptcha/api/challenge?k='+Html.RegExp('&quot;pub&quot;:&quot;(.*?)&quot;',1));
				Stored['challenge']:=Html.RegExp('challenge : ''(.*?)''',1);
				Result:='www.google.com/recaptcha/api/image?c='+Stored['challenge'];
			end;)	
		</imageurl>
		<posturl>http://moscow.megafon.ru/api/sms/send</posturl>
		<postdata>eval(
			var
				DT: TDateTime;
			begin
				DT:=AdjustTimeZone(SMS['DeliveryTime'],180,true);
				HTTP.Headers['X-Requested-With'] := 'XMLHttpRequest';
				HTTP.Headers.RemoveNamed('Accept');
				HTTP.Headers['Accept']:='application/json, text/javascript, */*; q=0.01';
				PostData.Add('addr', SMS['Phone_Def'] + SMS['Phone_Number']);
				PostData.Add('message',SMS['Text']);
				if SMS['Delivery'] then
				begin
					PostData.Add('shedule_date', FormatDateTime('dd.mm.yyyy',DT));
					PostData.Add('shedule_time', FormatDateTime('hh+++nn',DT));
				end else
					PostData.Add('shedule_date', '');
					PostData.Add('shedule_time', '');
				begin
				end;
				PostData.Add('recaptcha_challenge_field',Stored['challenge']);
				PostData.Add('recaptcha_response_field',SMS['Code']);
			end;)
		</postdata>
		<success>eval(
			begin
				Result:=Html.ExistsStr('&quot;unique_key&quot;');
				Stored['unique_key'] := Html.RegExp('&quot;unique_key&quot;:&quot;(.*?)&quot;', 1);
			end;)
		</success>
		<error>eval(
			begin
				if Html.ExistsStr('captcha') then
					Result := 'Неправильно введены символы с картинки'
				else if Html.ExistsStr('phone') then
					Result := 'Некорректно введен номер телефона'
				else if Html.ExistsStr('non-mf') then
					Result := 'Номер не принадлежит Мегафону'
				else if Html.ExistsStr('message') then
					Result := 'Некорректно введено сообщение'
				else if Html.ExistsStr('black-words') then
					Result := 'Сообщение нарушает правила пользовательского соглашения и не будет отправлено'
				else if Html.ExistsStr('server') then
					Result := 'Произошла ошибка на сервер оператора. Попробуйте позже.'
				else if Html.ExistsStr('datetime') then
					Result := 'Неверно указана дата или время'
				else 
					Result := 'Неизвестная ошибка';
			end;)
		</error>
		<cd_method>POST</cd_method>
		<cd_posturl>http://moscow.megafon.ru/api/sms/status</cd_posturl>
		<cd_postdata>eval(
			begin
				PostData.Add('unique_key', Stored['unique_key']);
			end;)
		</cd_postdata>
		<cd_success>eval(
			var
				Status: string;
			begin
				if (not Html.ExistsStr('&quot;unique_key&quot;')) or (Html.ExistsStr('&quot;errors&quot;')) then
					Result:=false
				else begin
					Status := Html.RegExp('&quot;status&quot;:&quot;(.*?)&quot;',1);
					if (Status = '') or (Status = '30') then
						Result:=true
					else	
						Result:='WAIT';
				end;	
			end;)
		</cd_success>
		<cd_error>eval(
			begin
				Result:='Ошибка при проверке подтверждения доставки';
			end;	
		</cd_error>
	</classprops>
</gate>