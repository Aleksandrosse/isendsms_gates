<?xml version="1.0" encoding="UTF-8"?>
<gate>
	<name>ETK</name>
	<caption>ЕТК</caption>
	<type>SMS</type>
	<class>HTTP</class>
	<version>12</version>
	<priority>10</priority>
	<country>Россия</country>
	<prefixlist>
		<prefix start="+7 901111"/>
		<prefix start="+7 901240" end="+7 901241"/>
		<prefix start="+7 901621"/>
		<prefix start="+7 901646" end="+7 901647"/>
		<prefix start="+7 901911"/>
		<prefix start="+7 902010" end="+7 902014"/>
		<prefix start="+7 902467" end="+7 902468"/>
		<prefix start="+7 902550" end="+7 902552"/>
		<prefix start="+7 90291" end="+7 90292"/>
		<prefix start="+7 902940" end="+7 902952"/>
		<prefix start="+7 902956" end="+7 902982"/>
		<prefix start="+7 902990" end="+7 902992"/>
		<prefix start="+7 902996"/>
		<prefix start="+7 90489"/>
		<prefix start="+7 908010" end="+7 908026"/>
		<prefix start="+7 908030" end="+7 908034"/>
		<prefix start="+7 908200" end="+7 908224"/>
		<prefix start="+7 908325" end="+7 908327"/>
		<prefix start="+7 950302" end="+7 950307"/>
		<prefix start="+7 95040" end="+7 95043"/>
		<prefix start="+7 950960" end="+7 950961"/>
		<prefix start="+7 950964" end="+7 950968"/>
		<prefix start="+7 95097" end="+7 95099"/>
		<prefix start="+7 952745" end="+7 952749"/>
		<prefix start="+7 953035" end="+7 953038"/>
		<prefix start="+7 953255" end="+7 953259"/>
		<prefix start="+7 95358" end="+7 95359"/>


		<prefix start="+7 902140" end="+7 902146"/>
		<prefix start="+7 902997" end="+7 902999"/>
		<prefix start="+7 951344" end="+7 951346"/>
		<prefix start="+7 95200"/>

		<prefix start="+7 902755" end="+7 902759"/>
		<prefix start="+7 902983" end="+7 902984"/>
		<prefix start="+7 908930" end="+7 908932"/>
		<prefix start="+7 95122"/>
	</prefixlist>	
	<info>
		<maxsymbols>459</maxsymbols>
		<maxunicodesymbols>201</maxunicodesymbols>
		<supportflash>0</supportflash>
		<supportdtdelivery>1</supportdtdelivery>
		<supportunicode>1</supportunicode>
		<supportcheckdelivery>1</supportcheckdelivery>
		<captcha>1</captcha>
		<gateurl>http://www.etk.ru/etc_send_sms</gateurl>
	</info>
	<classprops>
		<encoding>Windows-1251</encoding>
		<pageurl>http://www.etk.ru/etc_send_sms</pageurl>
		<imageurl>eval(
			begin
				HTTP.Referer:='http://www.etk.ru/etc_send_sms';
				Stored['key'] := Html.RegExp('challenge\?k=(.*?)&quot;',1);
				HTTP.HTTPMethod('GET','https://www.google.com/recaptcha/api/challenge?k='+ Stored['key'] + '&amp;cachestop=0.' + RandomString('0123456789', 17));
				Stored['challenge']:=Html.RegExp('challenge : ''(.*?)''',1);
				HTTP.HTTPMethod('GET','https://www.google.com/recaptcha/api/reload?c=' + Stored['challenge'] + '&amp;k=' + Stored['key'] + '&amp;reason=i&amp;type=image&amp;lang=ru');
				Stored['challenge']:=Html.RegExp('finish_reload\(''(.*?)''',1);
				Result:='https://www.google.com/recaptcha/api/image?c='+Stored['challenge'];
			end;)
		</imageurl>
		<posturl>http://www.etk.ru/scripts/sms_send_new.cgi</posturl>
		<handleredirects>1</handleredirects>
		<postdata>eval(
					begin
						PostData.Add('to',SMS['Phone_Def']+SMS['Phone_Number']);
						PostData.Add('message',SMS['Text']);
						if SMS['Delivery'] then
							PostData.Add('send_date',FormatDateTime('yyyy-mm-dd hh:nn',SMS['DeliveryTime']))
						else
							PostData.Add('send_date','');
						PostData.Add('recaptcha_challenge_field',Stored['challenge']);
						PostData.Add('recaptcha_response_field',SMS['Code']);
					end;
					)
		</postdata>
		<success>eval(HTML.ExistsStr('Введите номер сообщения'))</success>
		<error>eval(begin
						Result:=HTML.RegExp('&lt;font color=&quot;red&quot;&gt;(.*?)&lt;/font&gt;',1);
						Result:=DecodeFormElem(Result);
						Result:=DecodeFormElem(Result);
					end;
					)
		</error>
		<cd_method>GET</cd_method>
		<cd_url>eval('http://www.etk.ru/etc_check_sms?sms_id='+Html.RegExp('name=&quot;sms_id&quot; value=&quot;(.*?)&quot;',1))</cd_url>;
		<cd_success>eval(begin
							if Html.ExistsStr('Ваше сообщение находится в очереди') then
								Result:='WAIT'
							else Result:=HTML.ExistsStr('Ваше сообщение успешно доставлено');	
						end;
					)
		</cd_success>
		<cd_error>eval(begin
						Result:=Html.RegExp('отложено: (.*?)&lt;',1);
						if Result='' then
							Result:='Ошибка подтверждения доставки';
					end;)
		</cd_error>
	</classprops>
</gate>